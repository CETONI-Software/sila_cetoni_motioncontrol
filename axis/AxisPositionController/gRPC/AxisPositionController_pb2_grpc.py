# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import AxisPositionController_pb2 as AxisPositionController__pb2
import sila2lib.framework.SiLAFramework_pb2 as SiLAFramework__pb2


class AxisPositionControllerStub(object):
    """Feature: Axis Position Controller
    Allows to control the position of one axis of an axis system
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MoveToPosition = channel.unary_unary(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/MoveToPosition',
                request_serializer=AxisPositionController__pb2.MoveToPosition_Parameters.SerializeToString,
                response_deserializer=SiLAFramework__pb2.CommandConfirmation.FromString,
                )
        self.MoveToPosition_Info = channel.unary_stream(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/MoveToPosition_Info',
                request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
                response_deserializer=SiLAFramework__pb2.ExecutionInfo.FromString,
                )
        self.MoveToPosition_Result = channel.unary_unary(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/MoveToPosition_Result',
                request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
                response_deserializer=AxisPositionController__pb2.MoveToPosition_Responses.FromString,
                )
        self.MoveToHomePosition = channel.unary_unary(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/MoveToHomePosition',
                request_serializer=AxisPositionController__pb2.MoveToHomePosition_Parameters.SerializeToString,
                response_deserializer=AxisPositionController__pb2.MoveToHomePosition_Responses.FromString,
                )
        self.StopMoving = channel.unary_unary(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/StopMoving',
                request_serializer=AxisPositionController__pb2.StopMoving_Parameters.SerializeToString,
                response_deserializer=AxisPositionController__pb2.StopMoving_Responses.FromString,
                )
        self.Subscribe_Position = channel.unary_stream(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Subscribe_Position',
                request_serializer=AxisPositionController__pb2.Subscribe_Position_Parameters.SerializeToString,
                response_deserializer=AxisPositionController__pb2.Subscribe_Position_Responses.FromString,
                )
        self.Get_PositionUnit = channel.unary_unary(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_PositionUnit',
                request_serializer=AxisPositionController__pb2.Get_PositionUnit_Parameters.SerializeToString,
                response_deserializer=AxisPositionController__pb2.Get_PositionUnit_Responses.FromString,
                )
        self.Get_MinimumPosition = channel.unary_unary(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_MinimumPosition',
                request_serializer=AxisPositionController__pb2.Get_MinimumPosition_Parameters.SerializeToString,
                response_deserializer=AxisPositionController__pb2.Get_MinimumPosition_Responses.FromString,
                )
        self.Get_MaximumPosition = channel.unary_unary(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_MaximumPosition',
                request_serializer=AxisPositionController__pb2.Get_MaximumPosition_Parameters.SerializeToString,
                response_deserializer=AxisPositionController__pb2.Get_MaximumPosition_Responses.FromString,
                )
        self.Get_MinimumVelocity = channel.unary_unary(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_MinimumVelocity',
                request_serializer=AxisPositionController__pb2.Get_MinimumVelocity_Parameters.SerializeToString,
                response_deserializer=AxisPositionController__pb2.Get_MinimumVelocity_Responses.FromString,
                )
        self.Get_MaximumVelocity = channel.unary_unary(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_MaximumVelocity',
                request_serializer=AxisPositionController__pb2.Get_MaximumVelocity_Parameters.SerializeToString,
                response_deserializer=AxisPositionController__pb2.Get_MaximumVelocity_Responses.FromString,
                )
        self.Get_FCPAffectedByMetadata_AxisIdentifier = channel.unary_unary(
                '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_FCPAffectedByMetadata_AxisIdentifier',
                request_serializer=AxisPositionController__pb2.Get_FCPAffectedByMetadata_AxisIdentifier_Parameters.SerializeToString,
                response_deserializer=AxisPositionController__pb2.Get_FCPAffectedByMetadata_AxisIdentifier_Responses.FromString,
                )


class AxisPositionControllerServicer(object):
    """Feature: Axis Position Controller
    Allows to control the position of one axis of an axis system
    """

    def MoveToPosition(self, request, context):
        """Move To Position
        Move the axis to the given position with a certain velocity
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveToPosition_Info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveToPosition_Result(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveToHomePosition(self, request, context):
        """Move To Home Position
        Move the axis to its home position
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopMoving(self, request, context):
        """Stop Moving
        Immediately stops axis movement of a single axis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe_Position(self, request, context):
        """Position
        The current position of an axis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_PositionUnit(self, request, context):
        """PositionUnit
        The position unit used for specifying the position of an axis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_MinimumPosition(self, request, context):
        """Minimum Position
        The minimum position limit of an axis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_MaximumPosition(self, request, context):
        """Maximum Position
        The maximum position limit of an axis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_MinimumVelocity(self, request, context):
        """Minimum Velocity
        The minimum velocity limit of an axis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_MaximumVelocity(self, request, context):
        """Maximum Velocity
        The maximum velocity limit of an axis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_FCPAffectedByMetadata_AxisIdentifier(self, request, context):
        """Axis Identifier
        The identifier of a single axis of an axis system
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AxisPositionControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MoveToPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveToPosition,
                    request_deserializer=AxisPositionController__pb2.MoveToPosition_Parameters.FromString,
                    response_serializer=SiLAFramework__pb2.CommandConfirmation.SerializeToString,
            ),
            'MoveToPosition_Info': grpc.unary_stream_rpc_method_handler(
                    servicer.MoveToPosition_Info,
                    request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
                    response_serializer=SiLAFramework__pb2.ExecutionInfo.SerializeToString,
            ),
            'MoveToPosition_Result': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveToPosition_Result,
                    request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
                    response_serializer=AxisPositionController__pb2.MoveToPosition_Responses.SerializeToString,
            ),
            'MoveToHomePosition': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveToHomePosition,
                    request_deserializer=AxisPositionController__pb2.MoveToHomePosition_Parameters.FromString,
                    response_serializer=AxisPositionController__pb2.MoveToHomePosition_Responses.SerializeToString,
            ),
            'StopMoving': grpc.unary_unary_rpc_method_handler(
                    servicer.StopMoving,
                    request_deserializer=AxisPositionController__pb2.StopMoving_Parameters.FromString,
                    response_serializer=AxisPositionController__pb2.StopMoving_Responses.SerializeToString,
            ),
            'Subscribe_Position': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe_Position,
                    request_deserializer=AxisPositionController__pb2.Subscribe_Position_Parameters.FromString,
                    response_serializer=AxisPositionController__pb2.Subscribe_Position_Responses.SerializeToString,
            ),
            'Get_PositionUnit': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_PositionUnit,
                    request_deserializer=AxisPositionController__pb2.Get_PositionUnit_Parameters.FromString,
                    response_serializer=AxisPositionController__pb2.Get_PositionUnit_Responses.SerializeToString,
            ),
            'Get_MinimumPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_MinimumPosition,
                    request_deserializer=AxisPositionController__pb2.Get_MinimumPosition_Parameters.FromString,
                    response_serializer=AxisPositionController__pb2.Get_MinimumPosition_Responses.SerializeToString,
            ),
            'Get_MaximumPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_MaximumPosition,
                    request_deserializer=AxisPositionController__pb2.Get_MaximumPosition_Parameters.FromString,
                    response_serializer=AxisPositionController__pb2.Get_MaximumPosition_Responses.SerializeToString,
            ),
            'Get_MinimumVelocity': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_MinimumVelocity,
                    request_deserializer=AxisPositionController__pb2.Get_MinimumVelocity_Parameters.FromString,
                    response_serializer=AxisPositionController__pb2.Get_MinimumVelocity_Responses.SerializeToString,
            ),
            'Get_MaximumVelocity': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_MaximumVelocity,
                    request_deserializer=AxisPositionController__pb2.Get_MaximumVelocity_Parameters.FromString,
                    response_serializer=AxisPositionController__pb2.Get_MaximumVelocity_Responses.SerializeToString,
            ),
            'Get_FCPAffectedByMetadata_AxisIdentifier': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_FCPAffectedByMetadata_AxisIdentifier,
                    request_deserializer=AxisPositionController__pb2.Get_FCPAffectedByMetadata_AxisIdentifier_Parameters.FromString,
                    response_serializer=AxisPositionController__pb2.Get_FCPAffectedByMetadata_AxisIdentifier_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AxisPositionController(object):
    """Feature: Axis Position Controller
    Allows to control the position of one axis of an axis system
    """

    @staticmethod
    def MoveToPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/MoveToPosition',
            AxisPositionController__pb2.MoveToPosition_Parameters.SerializeToString,
            SiLAFramework__pb2.CommandConfirmation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MoveToPosition_Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/MoveToPosition_Info',
            SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
            SiLAFramework__pb2.ExecutionInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MoveToPosition_Result(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/MoveToPosition_Result',
            SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
            AxisPositionController__pb2.MoveToPosition_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MoveToHomePosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/MoveToHomePosition',
            AxisPositionController__pb2.MoveToHomePosition_Parameters.SerializeToString,
            AxisPositionController__pb2.MoveToHomePosition_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopMoving(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/StopMoving',
            AxisPositionController__pb2.StopMoving_Parameters.SerializeToString,
            AxisPositionController__pb2.StopMoving_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe_Position(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Subscribe_Position',
            AxisPositionController__pb2.Subscribe_Position_Parameters.SerializeToString,
            AxisPositionController__pb2.Subscribe_Position_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_PositionUnit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_PositionUnit',
            AxisPositionController__pb2.Get_PositionUnit_Parameters.SerializeToString,
            AxisPositionController__pb2.Get_PositionUnit_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_MinimumPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_MinimumPosition',
            AxisPositionController__pb2.Get_MinimumPosition_Parameters.SerializeToString,
            AxisPositionController__pb2.Get_MinimumPosition_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_MaximumPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_MaximumPosition',
            AxisPositionController__pb2.Get_MaximumPosition_Parameters.SerializeToString,
            AxisPositionController__pb2.Get_MaximumPosition_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_MinimumVelocity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_MinimumVelocity',
            AxisPositionController__pb2.Get_MinimumVelocity_Parameters.SerializeToString,
            AxisPositionController__pb2.Get_MinimumVelocity_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_MaximumVelocity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_MaximumVelocity',
            AxisPositionController__pb2.Get_MaximumVelocity_Parameters.SerializeToString,
            AxisPositionController__pb2.Get_MaximumVelocity_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_FCPAffectedByMetadata_AxisIdentifier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.AxisPositionController/Get_FCPAffectedByMetadata_AxisIdentifier',
            AxisPositionController__pb2.Get_FCPAffectedByMetadata_AxisIdentifier_Parameters.SerializeToString,
            AxisPositionController__pb2.Get_FCPAffectedByMetadata_AxisIdentifier_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
