syntax = "proto3";

import "SiLAFramework.proto";

package sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1;

/* Allows to control the position of one axis of an axis system */
service AxisPositionController {
  /* Move the axis to the given position with a certain velocity */
  rpc MoveToPosition (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.MoveToPosition_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
  /* Monitor the state of MoveToPosition */
  rpc MoveToPosition_Info (sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
  /* Retrieve result of MoveToPosition */
  rpc MoveToPosition_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.MoveToPosition_Responses) {}
  /* Move the axis to its home position */
  rpc MoveToHomePosition (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.MoveToHomePosition_Parameters) returns (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.MoveToHomePosition_Responses) {}
  /* Immediately stops axis movement of a single axis */
  rpc StopMoving (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.StopMoving_Parameters) returns (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.StopMoving_Responses) {}
  /* The current position of an axis */
  rpc Subscribe_Position (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Subscribe_Position_Parameters) returns (stream sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Subscribe_Position_Responses) {}
  /* The position unit used for specifying the position of an axis */
  rpc Get_PositionUnit (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_PositionUnit_Parameters) returns (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_PositionUnit_Responses) {}
  /* The minimum position limit of an axis */
  rpc Get_MinimumPosition (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_MinimumPosition_Parameters) returns (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_MinimumPosition_Responses) {}
  /* The maximum position limit of an axis */
  rpc Get_MaximumPosition (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_MaximumPosition_Parameters) returns (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_MaximumPosition_Responses) {}
  /* The minimum velocity limit of an axis */
  rpc Get_MinimumVelocity (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_MinimumVelocity_Parameters) returns (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_MinimumVelocity_Responses) {}
  /* The maximum velocity limit of an axis */
  rpc Get_MaximumVelocity (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_MaximumVelocity_Parameters) returns (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_MaximumVelocity_Responses) {}
  /* Get fully qualified identifiers of all features, commands and properties affected by AxisIdentifier */
  rpc Get_FCPAffectedByMetadata_AxisIdentifier (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_FCPAffectedByMetadata_AxisIdentifier_Parameters) returns (sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.Get_FCPAffectedByMetadata_AxisIdentifier_Responses) {}
}

/* A velocity value with a unit */
message DataType_Velocity {
  sila2.org.silastandard.Real Velocity = 1;  /* A velocity value with a unit */
}

/* Parameters for MoveToPosition */
message MoveToPosition_Parameters {
  sila2.org.silastandard.Real Position = 1;  /* The position to move to. Has to be in the range between MinimumPosition and MaximumPosition. See PositionUnit for the unit that is used for a specific axis. E.g. for rotational axis systems one of the axes needs a position specified in radians. */
  sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.DataType_Velocity Velocity = 2;  /* The velocity value for the movement. Has to be in the range between MinimumVelocity and MaximumVelocity. */
}

/* Responses of MoveToPosition */
message MoveToPosition_Responses {
}

/* Parameters for MoveToHomePosition */
message MoveToHomePosition_Parameters {
}

/* Responses of MoveToHomePosition */
message MoveToHomePosition_Responses {
}

/* Parameters for StopMoving */
message StopMoving_Parameters {
}

/* Responses of StopMoving */
message StopMoving_Responses {
}

/* Parameters for Position */
message Subscribe_Position_Parameters {
}

/* Responses of Position */
message Subscribe_Position_Responses {
  sila2.org.silastandard.Real Position = 1;  /* The current position of an axis */
}

/* Parameters for PositionUnit */
message Get_PositionUnit_Parameters {
}

/* Responses of PositionUnit */
message Get_PositionUnit_Responses {
  sila2.org.silastandard.String PositionUnit = 1;  /* The position unit used for specifying the position of an axis */
}

/* Parameters for MinimumPosition */
message Get_MinimumPosition_Parameters {
}

/* Responses of MinimumPosition */
message Get_MinimumPosition_Responses {
  sila2.org.silastandard.Real MinimumPosition = 1;  /* The minimum position limit of an axis */
}

/* Parameters for MaximumPosition */
message Get_MaximumPosition_Parameters {
}

/* Responses of MaximumPosition */
message Get_MaximumPosition_Responses {
  sila2.org.silastandard.Real MaximumPosition = 1;  /* The maximum position limit of an axis */
}

/* Parameters for MinimumVelocity */
message Get_MinimumVelocity_Parameters {
}

/* Responses of MinimumVelocity */
message Get_MinimumVelocity_Responses {
  sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.DataType_Velocity MinimumVelocity = 1;  /* The minimum velocity limit of an axis */
}

/* Parameters for MaximumVelocity */
message Get_MaximumVelocity_Parameters {
}

/* Responses of MaximumVelocity */
message Get_MaximumVelocity_Responses {
  sila2.de.cetoni.motioncontrol.axis.axispositioncontroller.v1.DataType_Velocity MaximumVelocity = 1;  /* The maximum velocity limit of an axis */
}

/* Parameters for Get_FCPAffectedByMetadata_AxisIdentifier */
message Get_FCPAffectedByMetadata_AxisIdentifier_Parameters {
}

/* Responses of Get_FCPAffectedByMetadata_AxisIdentifier */
message Get_FCPAffectedByMetadata_AxisIdentifier_Responses {
  repeated sila2.org.silastandard.String AffectedCalls = 1;  /* Fully qualified identifiers of all features, commands and properties affected by AxisIdentifier */
}

/* The identifier of a single axis of an axis system. Use AvailableAxes from the AxisSystemControlService Feature to get all possible values. */
message Metadata_AxisIdentifier {
  sila2.org.silastandard.String AxisIdentifier = 1;  /* The identifier of a single axis of an axis system. Use AvailableAxes from the AxisSystemControlService Feature to get all possible values. */
}
